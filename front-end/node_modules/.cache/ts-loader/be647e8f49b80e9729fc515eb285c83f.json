{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/thread-loader/dist/cjs.js!/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js!/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js??ref--14-3!/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/components/PluginListSelector.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/components/PluginListSelector.vue","mtime":1708521072003},{"path":"/home/ulrich/neuron-dashboard/babel.config.js","mtime":1708521072003},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1705331057587},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgeyB1c2VDc3NWYXJzIGFzIF91c2VDc3NWYXJzLCBkZWZpbmVDb21wb25lbnQgYXMgX2RlZmluZUNvbXBvbmVudCB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IHVucmVmIGFzIF91bnJlZiwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgaXNSZWYgYXMgX2lzUmVmLCB3aXRoQ3R4IGFzIF93aXRoQ3R4IH0gZnJvbSAidnVlIjsKaW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICd2dWUnOwppbXBvcnQgeyB1c2VJMThuIH0gZnJvbSAndnVlLWkxOG4nOwppbXBvcnQgdXNlUGx1Z2luIGZyb20gJ0AvY29tcG9zYWJsZXMvY29uZmlnL3VzZVBsdWdpbic7CmltcG9ydCB7IFBsdWdpbktpbmQsIERyaXZlckRpcmVjdGlvbiB9IGZyb20gJ0AvdHlwZXMvZW51bXMnOwppbXBvcnQgeyBOT1JUSF9EUklWRVJfTk9ERV9UWVBFLCBTT1VUSF9EUklWRVJfTk9ERV9UWVBFIH0gZnJvbSAnQC91dGlscy9jb25zdGFudHMnOwpleHBvcnQgZGVmYXVsdCAvKiNfX1BVUkVfXyovX2RlZmluZUNvbXBvbmVudCh7CiAgcHJvcHM6IHsKICAgIG1vZGVsVmFsdWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIHR5cGU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJzIyMHB4JwogICAgfQogIH0sCiAgZW1pdHM6IFsndXBkYXRlOm1vZGVsVmFsdWUnLCAnY2hhbmdlJ10sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKF9fcHJvcHMsIF9yZWYpIHsKICAgIHZhciBlbWl0cyA9IF9yZWYuZW1pdDsKICAgIHZhciBwcm9wcyA9IF9fcHJvcHM7CgogICAgX3VzZUNzc1ZhcnMoZnVuY3Rpb24gKF9jdHgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAiZDc1NjIzOTYiOiBfX3Byb3BzLndpZHRoCiAgICAgIH07CiAgICB9KTsKCiAgICB2YXIgX3VzZUkxOG4gPSB1c2VJMThuKCksCiAgICAgICAgdCA9IF91c2VJMThuLnQ7CgogICAgdmFyIHBsdWdpblR5cGUgPSBjb21wdXRlZCh7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBwcm9wcy5tb2RlbFZhbHVlOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWwpIHsKICAgICAgICBlbWl0cygndXBkYXRlOm1vZGVsVmFsdWUnLCB2YWwpOwogICAgICB9CiAgICB9KTsKCiAgICB2YXIgX3VzZVBsdWdpbiA9IHVzZVBsdWdpbigpLAogICAgICAgIHBsdWdpbkxpc3QgPSBfdXNlUGx1Z2luLnBsdWdpbkxpc3Q7CgogICAgdmFyIGV4Y2VwdFN0YXRpY1BsdWdpbkxpc3QgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBwbHVnaW5MaXN0LnZhbHVlLmZpbHRlcihmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICB2YXIga2luZCA9IF9yZWYyLmtpbmQ7CiAgICAgICAgcmV0dXJuIGtpbmQgIT09IFBsdWdpbktpbmQuU3RhdGljOwogICAgICB9KTsKICAgIH0pOwogICAgdmFyIHR5cGVzID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gcHJvcHMudHlwZSA9PT0gRHJpdmVyRGlyZWN0aW9uLlNvdXRoID8gU09VVEhfRFJJVkVSX05PREVfVFlQRSA6IE5PUlRIX0RSSVZFUl9OT0RFX1RZUEU7CiAgICB9KTsKICAgIHZhciBkaXJlY3Rpb25QbHVnaW5MaXN0ID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICBpZiAoQXJyYXkuaXNBcnJheSh0eXBlcy52YWx1ZSkgJiYgdHlwZXMudmFsdWUubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIGV4Y2VwdFN0YXRpY1BsdWdpbkxpc3QudmFsdWUuZmlsdGVyKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgICAgdmFyIG5vZGVfdHlwZSA9IF9yZWYzLm5vZGVfdHlwZTsKICAgICAgICAgIHJldHVybiB0eXBlcy52YWx1ZS5zb21lKGZ1bmN0aW9uICh0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiB0eXBlID09PSBub2RlX3R5cGU7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGV4Y2VwdFN0YXRpY1BsdWdpbkxpc3QudmFsdWU7CiAgICB9KTsKICAgIHZhciBzZWxlY3RvclBsYWNlaG9sZGVyID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gcHJvcHMucGxhY2Vob2xkZXIgfHwgdCgnY29uZmlnLnBsdWdpbktpbmRQbGFjZWhvbGRlcicpOwogICAgfSk7CgogICAgdmFyIGNoYW5nZVBsdWdpblR5cGUgPSBmdW5jdGlvbiBjaGFuZ2VQbHVnaW5UeXBlKHZhbCkgewogICAgICBlbWl0cygnY2hhbmdlJywgdmFsKTsKICAgIH07CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUpIHsKICAgICAgdmFyIF9jb21wb25lbnRfZW1xeF9vcHRpb24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiZW1xeC1vcHRpb24iKTsKCiAgICAgIHZhciBfY29tcG9uZW50X2VtcXhfc2VsZWN0ID0gX3Jlc29sdmVDb21wb25lbnQoImVtcXgtc2VsZWN0Iik7CgogICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbXF4X3NlbGVjdCwgewogICAgICAgIG1vZGVsVmFsdWU6IF91bnJlZihwbHVnaW5UeXBlKSwKICAgICAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF9pc1JlZihwbHVnaW5UeXBlKSA/IHBsdWdpblR5cGUudmFsdWUgPSAkZXZlbnQgOiBudWxsOwogICAgICAgIH0pLAogICAgICAgIGNsZWFyYWJsZTogIiIsCiAgICAgICAgc2l6ZTogX19wcm9wcy5zaXplLAogICAgICAgIGNsYXNzOiAicGx1Z2luX3NlbGVjdCIsCiAgICAgICAgcGxhY2Vob2xkZXI6IF91bnJlZihzZWxlY3RvclBsYWNlaG9sZGVyKSwKICAgICAgICBkaXNhYmxlZDogX19wcm9wcy5kaXNhYmxlZCwKICAgICAgICBvbkNoYW5nZTogY2hhbmdlUGx1Z2luVHlwZQogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KF91bnJlZihkaXJlY3Rpb25QbHVnaW5MaXN0KSwgZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZW1xeF9vcHRpb24sIHsKICAgICAgICAgICAgICBrZXk6IGl0ZW0ubmFtZSwKICAgICAgICAgICAgICB2YWx1ZTogaXRlbS5uYW1lLAogICAgICAgICAgICAgIGxhYmVsOiBpdGVtLm5hbWUKICAgICAgICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSIsICJsYWJlbCJdKTsKICAgICAgICAgIH0pLCAxMjgpKV07CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICB9LCA4LCBbIm1vZGVsVmFsdWUiLCAic2l6ZSIsICJwbGFjZWhvbGRlciIsICJkaXNhYmxlZCJdKTsKICAgIH07CiAgfQp9KTs="},null]}