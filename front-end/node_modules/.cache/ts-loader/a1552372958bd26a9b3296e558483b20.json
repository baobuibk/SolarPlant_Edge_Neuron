{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/thread-loader/dist/cjs.js!/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js!/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js??ref--14-3!/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/components/GroupListSelector.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/components/GroupListSelector.vue","mtime":1708521072003},{"path":"/home/ulrich/neuron-dashboard/babel.config.js","mtime":1708521072003},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1705331057587},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3VscmljaC9uZXVyb24tZGFzaGJvYXJkL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgdXNlQ3NzVmFycyBhcyBfdXNlQ3NzVmFycywgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnOwppbXBvcnQgeyB1bnJlZiBhcyBfdW5yZWYsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50LCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIGlzUmVmIGFzIF9pc1JlZiwgd2l0aEN0eCBhcyBfd2l0aEN0eCB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IGNvbXB1dGVkLCB3YXRjaCwgcmVmLCBuZXh0VGljayB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IHVzZUkxOG4gfSBmcm9tICd2dWUtaTE4bic7CmltcG9ydCB7IHF1ZXJ5R3JvdXBMaXN0IH0gZnJvbSAnQC9hcGkvY29uZmlnJzsKZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL19kZWZpbmVDb21wb25lbnQoewogIHByb3BzOiB7CiAgICBtb2RlbFZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBkcml2ZXI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJzIyMHB4JwogICAgfQogIH0sCiAgZW1pdHM6IFsndXBkYXRlOm1vZGVsVmFsdWUnLCAnY2hhbmdlJ10sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKF9fcHJvcHMsIF9yZWYpIHsKICAgIHZhciBlbWl0cyA9IF9yZWYuZW1pdDsKICAgIHZhciBwcm9wcyA9IF9fcHJvcHM7CgogICAgX3VzZUNzc1ZhcnMoZnVuY3Rpb24gKF9jdHgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICAiMGE4MDlmZmYiOiBfX3Byb3BzLndpZHRoCiAgICAgIH07CiAgICB9KTsKCiAgICB2YXIgX3VzZUkxOG4gPSB1c2VJMThuKCksCiAgICAgICAgdCA9IF91c2VJMThuLnQ7CgogICAgdmFyIGdyb3VwTGlzdCA9IHJlZihbXSk7CiAgICB2YXIgZ3JvdXAgPSBjb21wdXRlZCh7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiBwcm9wcy5tb2RlbFZhbHVlOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldCh2YWwpIHsKICAgICAgICBlbWl0cygndXBkYXRlOm1vZGVsVmFsdWUnLCB2YWwpOwogICAgICB9CiAgICB9KTsKICAgIHdhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIHByb3BzLmRyaXZlcjsKICAgIH0sIGZ1bmN0aW9uIChuZXdWKSB7CiAgICAgIG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBnZXRMaXN0KG5ld1YpOwogICAgICB9KTsKICAgIH0sIHsKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9KTsKCiAgICB2YXIgZ2V0TGlzdCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShkcml2ZXIpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKCiAgICAgICAgICAgICAgICBpZiAoIWRyaXZlcikgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gcXVlcnlHcm91cExpc3QoZHJpdmVyKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBbXTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgZ3JvdXBMaXN0LnZhbHVlID0gX2NvbnRleHQudDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQxKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTFdXSk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiBnZXRMaXN0KF94KSB7CiAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7CgogICAgdmFyIHNlbGVjdG9yUGxhY2Vob2xkZXIgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBwcm9wcy5wbGFjZWhvbGRlciB8fCB0KCdjb25maWcuZ3JvdXBQbGFjZWhvbGRlcicpOwogICAgfSk7CgogICAgdmFyIGNoYW5nZUdyb3VwID0gZnVuY3Rpb24gY2hhbmdlR3JvdXAodmFsKSB7CiAgICAgIGVtaXRzKCdjaGFuZ2UnLCB2YWwpOwogICAgfTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSkgewogICAgICB2YXIgX2NvbXBvbmVudF9lbXF4X29wdGlvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbXF4LW9wdGlvbiIpOwoKICAgICAgdmFyIF9jb21wb25lbnRfZW1xeF9zZWxlY3QgPSBfcmVzb2x2ZUNvbXBvbmVudCgiZW1xeC1zZWxlY3QiKTsKCiAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X2VtcXhfc2VsZWN0LCB7CiAgICAgICAgbW9kZWxWYWx1ZTogX3VucmVmKGdyb3VwKSwKICAgICAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF9pc1JlZihncm91cCkgPyBncm91cC52YWx1ZSA9ICRldmVudCA6IG51bGw7CiAgICAgICAgfSksCiAgICAgICAgY2xlYXJhYmxlOiAiIiwKICAgICAgICBzaXplOiBfX3Byb3BzLnNpemUsCiAgICAgICAgY2xhc3M6ICJwbHVnaW5fc2VsZWN0IiwKICAgICAgICBwbGFjZWhvbGRlcjogX3VucmVmKHNlbGVjdG9yUGxhY2Vob2xkZXIpLAogICAgICAgIGRpc2FibGVkOiBfX3Byb3BzLmRpc2FibGVkLAogICAgICAgIG9uQ2hhbmdlOiBjaGFuZ2VHcm91cAogICAgICB9LCB7CiAgICAgICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KGdyb3VwTGlzdC52YWx1ZSwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgICAgICAgIHZhciBuYW1lID0gX3JlZjMubmFtZTsKICAgICAgICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZW1xeF9vcHRpb24sIHsKICAgICAgICAgICAgICBrZXk6IG5hbWUsCiAgICAgICAgICAgICAgdmFsdWU6IG5hbWUsCiAgICAgICAgICAgICAgbGFiZWw6IG5hbWUKICAgICAgICAgICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZSIsICJsYWJlbCJdKTsKICAgICAgICAgIH0pLCAxMjgpKV07CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICB9LCA4LCBbIm1vZGVsVmFsdWUiLCAic2l6ZSIsICJwbGFjZWhvbGRlciIsICJkaXNhYmxlZCJdKTsKICAgIH07CiAgfQp9KTs="},null]}