{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/northDriver/components/AddSubscriptionDialog.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/northDriver/components/AddSubscriptionDialog.vue","mtime":1708521072013},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":null,"sources":["/home/ulrich/neuron-dashboard/src/views/config/northDriver/components/AddSubscriptionDialog.vue"],"sourcesContent":["<template>\n  <el-dialog\n    v-model=\"showDialog\"\n    :width=\"600\"\n    custom-class=\"common-dialog\"\n    :title=\"$t('config.addSubscription')\"\n    :z-index=\"2000\"\n  >\n    <el-alert v-if=\"topicWarning\" :title=\"topicWarning\" type=\"warning\" show-icon :closable=\"false\" />\n\n    <emqx-form ref=\"formCom\" :model=\"subscriptionForm\" :rules=\"rules\">\n      <section v-if=\"!isSupportBatchSub\">\n        <emqx-form-item prop=\"driver\" :label=\"$t('config.southDevice')\">\n          <emqx-select\n            v-model=\"subscriptionForm.driver\"\n            filterable\n            :placeholder=\"$t('common.pleaseSelect')\"\n            @change=\"selectedNodeChanged\"\n          >\n            <emqx-option v-for=\"{ name } in deviceList\" :key=\"name\" :value=\"name\" :label=\"name\" />\n          </emqx-select>\n        </emqx-form-item>\n        <emqx-form-item prop=\"group\" :label=\"$t('config.group')\">\n          <emqx-select v-model=\"subscriptionForm.group\" filterable :placeholder=\"$t('common.pleaseSelect')\">\n            <emqx-option v-for=\"{ name } in groupList\" :key=\"name\" :value=\"name\" :label=\"name\" />\n          </emqx-select>\n        </emqx-form-item>\n      </section>\n\n      <!-- mqtt -->\n      <emqx-form-item v-if=\"isMQTTPugin\" prop=\"topic\" :label=\"$t('config.topic')\">\n        <emqx-input v-model=\"subscriptionForm.topic\" />\n      </emqx-form-item>\n\n      <!-- gewu -->\n      <emqx-form-item v-if=\"isGewuPugin\" prop=\"productKey\" label=\"productKey\">\n        <emqx-input v-model=\"subscriptionForm.productKey\" />\n      </emqx-form-item>\n\n      <emqx-form-item v-if=\"isSupportBatchSub\" prop=\"driverGroups\" :label=\"$t('config.subscribeSouthDriverData')\">\n        <SouthGroupsCheckbox v-model=\"subscriptionForm.driverGroups\" />\n      </emqx-form-item>\n    </emqx-form>\n\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <emqx-button type=\"primary\" size=\"small\" @click=\"submit\" :loading=\"isSubmitting\">\n          {{ $t('common.submit') }}\n        </emqx-button>\n        <emqx-button size=\"small\" @click=\"showDialog = false\">{{ $t('common.cancel') }}</emqx-button>\n      </span>\n    </template>\n  </el-dialog>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, defineProps, defineEmits, watch } from 'vue'\nimport { ElDialog, ElAlert } from 'element-plus'\nimport { useAddSubscription } from '@/composables/config/useSubscription'\nimport { useDriverInfo } from '@/composables/config/useDriver'\nimport SouthGroupsCheckbox from '@/views/config/components/SouthGroupsCheckbox.vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    required: true,\n  },\n  currentNode: {\n    type: String,\n    required: true,\n  },\n})\nconst emit = defineEmits(['update:modelValue', 'submitted'])\n\nconst showDialog = computed({\n  get: () => props.modelValue,\n  set: (val: boolean) => {\n    emit('update:modelValue', val)\n  },\n})\nconst {\n  formCom,\n  rules,\n  topicWarning,\n  subscriptionForm,\n  deviceList,\n  groupList,\n  isSubmitting,\n\n  initForm,\n  selectedNodeChanged,\n  submitData,\n} = useAddSubscription(props)\n\nconst { isMQTTPugin, isGewuPugin, isSupportBatchSub } = useDriverInfo()\n\nconst submit = async () => {\n  await submitData()\n  showDialog.value = false\n  emit('submitted')\n}\n\nwatch(showDialog, (val) => {\n  if (val) {\n    initForm()\n  } else {\n    formCom.value.resetField()\n    groupList.value = []\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n:deep {\n  .auto-selector {\n    display: block;\n    width: 100%;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;AAwDA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA2B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACznF;;;;;;;;;;;;;;;;qBANwB;AAgBtB;AAC0D;AAC5D;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbvE;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC;AACH,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}]}