{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/template/Tag.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/template/Tag.vue","mtime":1708521072013},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":null,"sources":["/home/ulrich/neuron-dashboard/src/views/config/template/Tag.vue"],"sourcesContent":["<template>\n  <emqx-card v-emqx-loading=\"isListLoading\" class=\"tag-page\">\n    <h3 class=\"card-title\">{{ $t('config.tagList') }}</h3>\n    <div class=\"card-bar-under-title common-flex\">\n      <div class=\"bar-left\">\n        <p class=\"driver-name\">\n          <label>{{ $t('template.templateName') }}</label>\n          <span>{{ template }}</span>\n        </p>\n      </div>\n      <div class=\"btns common-flex\">\n        <div class=\"btn-group\">\n          <emqx-button size=\"small\" type=\"primary\" @click=\"goCreatePage\">\n            {{ $t('common.create') }}\n          </emqx-button>\n          <emqx-button size=\"small\" type=\"warning\" :disabled=\"!tagList.length\" @click=\"clearTag\">{{\n            $t('common.clear')\n          }}</emqx-button>\n          <emqx-button size=\"small\" type=\"danger\" :disabled=\"!tagCheckedList.length\" @click=\"batchDeleteTag\">{{\n            $t('common.delete')\n          }}</emqx-button>\n          <KeywordSerachInput\n            v-model=\"queryKeyword.name\"\n            class=\"search_input\"\n            @input=\"dbGetTagList\"\n            @clear=\"dbGetTagList\"\n            @enter=\"dbGetTagList\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"table-container\">\n      <emqx-table :data=\"tagList\" :empty-text=\"$t('common.emptyData')\">\n        <emqx-table-column :width=\"28\">\n          <template #header>\n            <emqx-checkbox v-model=\"allChecked\" />\n          </template>\n          <template #default=\"{ row }\">\n            <emqx-checkbox v-model=\"row.checked\" />\n          </template>\n        </emqx-table-column>\n        <emqx-table-column :label=\"$t('common.name')\" prop=\"name\"></emqx-table-column>\n        <emqx-table-column :label=\"$t('config.address')\" prop=\"address\"></emqx-table-column>\n\n        <emqx-table-column :label=\"$t('common.type')\">\n          <template #default=\"{ row }\">{{ findTagTypeLabelByValue(row.type) }}</template>\n        </emqx-table-column>\n        <emqx-table-column :label=\"$t('common.attribute')\">\n          <template #default=\"{ row }\">{{ getAttrStrByValue(row.attribute) }}</template>\n        </emqx-table-column>\n        <emqx-table-column :label=\"$t('config.decimal')\">\n          <template #default=\"{ row }\">{{ tagDecimalValue(row.decimal) }}</template>\n        </emqx-table-column>\n        <emqx-table-column :label=\"$t('config.precision')\">\n          <template #default=\"{ row }\">{{ tagPrecisionValue(row.type, row.precision) }}</template>\n        </emqx-table-column>\n        <emqx-table-column :label=\"$t('config.desc')\" prop=\"description\" />\n\n        <emqx-table-column align=\"left\" :label=\"$t('common.oper')\" width=\"140px\">\n          <template #default=\"{ row }\">\n            <AComWithDesc :content=\"$t('common.edit')\">\n              <i class=\"el-icon-edit-outline\" @click=\"editTag(row)\" />\n            </AComWithDesc>\n            <AComWithDesc :content=\"$t('common.delete')\">\n              <i class=\"iconfont icondelete\" @click=\"delTag(row)\" />\n            </AComWithDesc>\n          </template>\n        </emqx-table-column>\n      </emqx-table>\n    </div>\n    <emqx-pagination\n      v-if=\"pageController.total > 50\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      v-model:current-page=\"pageController.pageNum\"\n      :page-sizes=\"[50, 100, 200]\"\n      :total=\"pageController.total\"\n      :page-size=\"pageController.pageSize\"\n      @current-change=\"getAPageTagData\"\n      @size-change=\"handleSizeChange\"\n    />\n    <!-- Edit tag -->\n    <EditTagDialog\n      v-model=\"showEditDialog\"\n      :tag=\"currentTag\"\n      :template=\"template\"\n      @submitted=\"refreshTable\"\n      :group=\"groupName\"\n    />\n  </emqx-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport AComWithDesc from '@/components/AComWithDesc.vue'\nimport KeywordSerachInput from '@/components/KeywordSearchInput.vue'\nimport EditTagDialog from './components/EditTagDialog.vue'\nimport useTemplateTagList from '@/composables/config/useTemplateTagList'\nimport {\n  useTagTypeSelect,\n  useTagAttributeTypeSelect,\n  useTagPrecision,\n  useTagDecimal,\n} from '@/composables/config/useAddTagCommon'\n\nconst {\n  template,\n  groupName,\n\n  isListLoading,\n  tagList,\n  tagCheckedList,\n  allChecked,\n\n  pageController,\n  getAPageTagData,\n  handleSizeChange,\n\n  delTag,\n  batchDeleteTag,\n  clearTag,\n\n  queryKeyword,\n  dbGetTagList,\n  refreshTable,\n\n  goCreatePage,\n  editTag,\n  showEditDialog,\n  currentTag,\n} = useTemplateTagList()\nconst { tagPrecisionValue } = useTagPrecision()\nconst { tagDecimalValue } = useTagDecimal()\nconst { findLabelByValue: findTagTypeLabelByValue } = useTagTypeSelect()\nconst { getAttrStrByValue } = useTagAttributeTypeSelect()\n</script>\n\n<style lang=\"scss\">\n.tag-page {\n  .table-container {\n    margin-bottom: 24px;\n  }\n  .search_input {\n    margin-left: 10px;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;AA6FA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C;;;;AAXwB;AAYxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}]}