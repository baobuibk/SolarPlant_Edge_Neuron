{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/template/Group.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/template/Group.vue","mtime":1708521072013},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":null,"sources":["/home/ulrich/neuron-dashboard/src/views/config/template/Group.vue"],"sourcesContent":["<template>\n  <emqx-card class=\"group\" v-emqx-loading=\"isListLoading\">\n    <h3 class=\"card-title\">{{ $t('config.groupList') }}</h3>\n    <div class=\"card-bar-under-title common-flex\">\n      <div class=\"bar-left common-flex\">\n        <p class=\"driver-name\">\n          <label>{{ $t('template.templateName') }}</label>\n          <span>{{ template }}</span>\n          <!-- <i class=\"el-icon-edit icon-edit\" :title=\"$t('common.edit')\" @click=\"editNodeName\" /> -->\n        </p>\n      </div>\n      <div class=\"btns common-flex\">\n        <div class=\"btn-group\">\n          <emqx-dropdown :hide-timeout=\"512\" popper-class=\"btn-download-temp-popper\">\n            <emqx-upload\n              class=\"uploader-tag\"\n              :before-upload=\"importTagsByGroups\"\n              :show-file-list=\"false\"\n              action=\"placeholder\"\n            >\n              <emqx-button size=\"small\">\n                <i class=\"iconfont icon-import icondownload\"></i>\n                <span>{{ $t('common.import') }}</span>\n              </emqx-button>\n            </emqx-upload>\n            <template #dropdown>\n              <emqx-dropdown-menu>\n                <emqx-button plain class=\"btn-download-temp\" @click=\"downloadTemplate\">\n                  <span>{{ $t('config.downloadTemplate') }}</span>\n                </emqx-button>\n              </emqx-dropdown-menu>\n            </template>\n          </emqx-dropdown>\n\n          <!-- :loading=\"isExporting\" -->\n          <emqx-button\n            size=\"small\"\n            class=\"export-tags--btn\"\n            :disabled=\"!groupCheckedList.length\"\n            @click=\"ExportTagsByGroups\"\n          >\n            <i class=\"iconfont icon-import iconsubmit\"></i>\n            <span>{{ $t('common.export') }}</span>\n          </emqx-button>\n          <emqx-button size=\"small\" type=\"primary\" @click=\"handleAddGroup\">\n            {{ $t('common.create') }}\n          </emqx-button>\n          <emqx-button size=\"small\" type=\"warning\" :disabled=\"!groupList.length\" @click=\"clearGroup\">{{\n            $t('common.clear')\n          }}</emqx-button>\n          <emqx-button size=\"small\" type=\"danger\" :disabled=\"!groupCheckedList.length\" @click=\"batchDeleteGroup\">{{\n            $t('common.delete')\n          }}</emqx-button>\n        </div>\n      </div>\n    </div>\n\n    <emqx-table\n      :data=\"groupList\"\n      :empty-text=\"$t('common.emptyData')\"\n      :row-class-name=\"'table-row-click'\"\n      @row-click=\"goTagPage\"\n    >\n      <emqx-table-column :width=\"28\">\n        <template #header>\n          <emqx-checkbox v-model=\"allChecked\" />\n        </template>\n        <template #default=\"{ row }\">\n          <emqx-checkbox v-model=\"row.checked\" @click.stop=\"() => {}\" />\n        </template>\n      </emqx-table-column>\n      <emqx-table-column :label=\"$t('common.No')\" :width=\"60\">\n        <template #default=\"{ index }\">{{ index + 1 }}</template>\n      </emqx-table-column>\n      <emqx-table-column :label=\"$t('config.groupName')\" prop=\"name\">\n        <template #default=\"{ row }\">\n          <el-link type=\"primary\" :underline=\"false\" href=\"javascript:;\" @click.stop=\"goTagPage(row)\">\n            {{ row.name }}\n          </el-link>\n        </template>\n      </emqx-table-column>\n      <emqx-table-column :label=\"$t('config.tagCounts')\" prop=\"tag_count\"></emqx-table-column>\n      <emqx-table-column :label=\"$t('config.interval')\" prop=\"interval\"></emqx-table-column>\n      <emqx-table-column align=\"left\" :label=\"$t('common.oper')\" width=\"140px\">\n        <template #default=\"{ row }\">\n          <div class=\"operator-wrap\">\n            <AComWithDesc :content=\"$t('common.edit')\">\n              <i class=\"el-icon-edit-outline\" @click.stop=\"handleEditGroup(row)\" />\n            </AComWithDesc>\n            <AComWithDesc :content=\"$t('common.delete')\">\n              <i class=\"iconfont icondelete\" @click.stop=\"delGroup(row)\" />\n            </AComWithDesc>\n          </div>\n        </template>\n      </emqx-table-column>\n    </emqx-table>\n  </emqx-card>\n\n  <GroupDialog\n    v-model=\"groupForm\"\n    v-model:dialog-visible=\"groupDialogVisible\"\n    :is-edit=\"isEditGroup\"\n    :isSubmitting=\"isSubmitting\"\n    @submitted=\"submitedForm\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { ElLink } from 'element-plus'\nimport AComWithDesc from '@/components/AComWithDesc.vue'\nimport GroupDialog from '@/views/config/components/GroupDialog.vue'\nimport useGroupList from '@/composables/config/useTemplateGroupList'\nimport useTemplateAddGroup from '@/composables/config/useTemplateGroupDialog'\nimport { useTemplatePluginInfo } from '@/composables/config/usePluginInfo'\n\nconst { templatePluginInfo, getTemplatePluginInfo } = useTemplatePluginInfo()\n\nawait getTemplatePluginInfo()\nconst {\n  template,\n  isListLoading,\n  groupList,\n  groupCheckedList,\n  allChecked,\n  getGroupList,\n\n  delGroup,\n  batchDeleteGroup,\n  clearGroup,\n\n  downloadTemplate,\n  importTagsByGroups,\n  ExportTagsByGroups,\n\n  goTagPage,\n} = useGroupList(templatePluginInfo.value)\n\nconst { handleAddGroup, handleEditGroup, isEditGroup, groupDialogVisible, groupForm, isSubmitting, submitForm } =\n  useTemplateAddGroup()\n\nconst submitedForm = async () => {\n  await submitForm()\n  getGroupList()\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.driver-name {\n  margin-right: 22px;\n}\n.btn-group {\n  &:not(:last-child) {\n    margin-right: 32px;\n  }\n}\n\n.uploader-tag,\n.export-tags--btn {\n  display: inline-block;\n  margin-left: 10px;\n}\n\n.btn-download-temp-popper .el-dropdown-menu {\n  padding: 0;\n}\n.btn-download-temp {\n  font-weight: normal;\n  border: none;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AA4GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpwB;AAQxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7E;AACA;gDAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}]}