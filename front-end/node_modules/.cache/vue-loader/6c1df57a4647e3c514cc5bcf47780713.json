{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/components/GroupListSelector.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/components/GroupListSelector.vue","mtime":1708521072003},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdXNlQ3NzVmFycyBhcyBfdXNlQ3NzVmFycywgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnCmltcG9ydCB7IHVucmVmIGFzIF91bnJlZiwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgaXNSZWYgYXMgX2lzUmVmLCB3aXRoQ3R4IGFzIF93aXRoQ3R4IH0gZnJvbSAidnVlIgoKaW1wb3J0IHsgY29tcHV0ZWQsIHdhdGNoLCByZWYsIG5leHRUaWNrIH0gZnJvbSAndnVlJwppbXBvcnQgdHlwZSB7IFJlZiB9IGZyb20gJ3Z1ZScKaW1wb3J0IHsgdXNlSTE4biB9IGZyb20gJ3Z1ZS1pMThuJwppbXBvcnQgeyBxdWVyeUdyb3VwTGlzdCB9IGZyb20gJ0AvYXBpL2NvbmZpZycKaW1wb3J0IHR5cGUgeyBHcm91cERhdGEgfSBmcm9tICdAL3R5cGVzL2NvbmZpZycKCgpleHBvcnQgZGVmYXVsdCAvKiNfX1BVUkVfXyovX2RlZmluZUNvbXBvbmVudCh7CiAgcHJvcHM6IHsKICBtb2RlbFZhbHVlOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJycgfSwKICBkcml2ZXI6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LAogIHBsYWNlaG9sZGVyOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJycgfSwKICBzaXplOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJycgfSwKICBkaXNhYmxlZDogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogIHdpZHRoOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJzIyMHB4JyB9LAp9LAogIGVtaXRzOiBbJ3VwZGF0ZTptb2RlbFZhbHVlJywgJ2NoYW5nZSddLAogIHNldHVwKF9fcHJvcHMsIHsgZW1pdDogZW1pdHMgfSkgewoKY29uc3QgcHJvcHMgPSBfX3Byb3BzCl91c2VDc3NWYXJzKF9jdHggPT4gKHsKICAiMGE4MDlmZmYiOiAoX19wcm9wcy53aWR0aCkKfSkpCgoKCgpjb25zdCB7IHQgfSA9IHVzZUkxOG4oKQoKY29uc3QgZ3JvdXBMaXN0OiBSZWY8QXJyYXk8R3JvdXBEYXRhPj4gPSByZWYoW10pCgpjb25zdCBncm91cCA9IGNvbXB1dGVkKHsKICBnZXQ6ICgpID0+IHByb3BzLm1vZGVsVmFsdWUsCiAgc2V0OiAodmFsKSA9PiB7CiAgICBlbWl0cygndXBkYXRlOm1vZGVsVmFsdWUnLCB2YWwpCiAgfSwKfSkKCndhdGNoKAogICgpID0+IHByb3BzLmRyaXZlciwKICAobmV3VikgPT4gewogICAgbmV4dFRpY2soKCkgPT4gewogICAgICBnZXRMaXN0KG5ld1YpCiAgICB9KQogIH0sCiAgeyBpbW1lZGlhdGU6IHRydWUgfSwKKQoKY29uc3QgZ2V0TGlzdCA9IGFzeW5jIChkcml2ZXI6IHN0cmluZykgPT4gewogIHRyeSB7CiAgICBncm91cExpc3QudmFsdWUgPSBkcml2ZXIgPyBhd2FpdCBxdWVyeUdyb3VwTGlzdChkcml2ZXIgYXMgc3RyaW5nKSA6IFtdCiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpCiAgfQp9Cgpjb25zdCBzZWxlY3RvclBsYWNlaG9sZGVyID0gY29tcHV0ZWQoKCkgPT4gewogIHJldHVybiBwcm9wcy5wbGFjZWhvbGRlciB8fCB0KCdjb25maWcuZ3JvdXBQbGFjZWhvbGRlcicpCn0pCmNvbnN0IGNoYW5nZUdyb3VwID0gKHZhbDogc3RyaW5nKSA9PiB7CiAgZW1pdHMoJ2NoYW5nZScsIHZhbCkKfQoKcmV0dXJuIChfY3R4OiBhbnksX2NhY2hlOiBhbnkpID0+IHsKICBjb25zdCBfY29tcG9uZW50X2VtcXhfb3B0aW9uID0gX3Jlc29sdmVDb21wb25lbnQoImVtcXgtb3B0aW9uIikhCiAgY29uc3QgX2NvbXBvbmVudF9lbXF4X3NlbGVjdCA9IF9yZXNvbHZlQ29tcG9uZW50KCJlbXF4LXNlbGVjdCIpIQoKICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfZW1xeF9zZWxlY3QsIHsKICAgIG1vZGVsVmFsdWU6IF91bnJlZihncm91cCksCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gKCRldmVudDogYW55KSA9PiAoX2lzUmVmKGdyb3VwKSA/IChncm91cCkudmFsdWUgPSAkZXZlbnQgOiBudWxsKSksCiAgICBjbGVhcmFibGU6ICIiLAogICAgc2l6ZTogX19wcm9wcy5zaXplLAogICAgY2xhc3M6ICJwbHVnaW5fc2VsZWN0IiwKICAgIHBsYWNlaG9sZGVyOiBfdW5yZWYoc2VsZWN0b3JQbGFjZWhvbGRlciksCiAgICBkaXNhYmxlZDogX19wcm9wcy5kaXNhYmxlZCwKICAgIG9uQ2hhbmdlOiBjaGFuZ2VHcm91cAogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFsKICAgICAgKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChncm91cExpc3QudmFsdWUsICh7IG5hbWUgfSkgPT4gewogICAgICAgIHJldHVybiAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9lbXF4X29wdGlvbiwgewogICAgICAgICAga2V5OiBuYW1lLAogICAgICAgICAgdmFsdWU6IG5hbWUsCiAgICAgICAgICBsYWJlbDogbmFtZQogICAgICAgIH0sIG51bGwsIDgsIFsidmFsdWUiLCAibGFiZWwiXSkpCiAgICAgIH0pLCAxMjgpKQogICAgXSksCiAgICBfOiAxCiAgfSwgOCwgWyJtb2RlbFZhbHVlIiwgInNpemUiLCAicGxhY2Vob2xkZXIiLCAiZGlzYWJsZWQiXSkpCn0KfQoKfSk="},{"version":3,"file":null,"sources":["/home/ulrich/neuron-dashboard/src/views/config/components/GroupListSelector.vue"],"sourcesContent":["<template>\n  <emqx-select\n    v-model=\"group\"\n    clearable\n    :size=\"size\"\n    class=\"plugin_select\"\n    :placeholder=\"selectorPlaceholder\"\n    :disabled=\"disabled\"\n    @change=\"changeGroup\"\n  >\n    <emqx-option v-for=\"{ name } in groupList\" :key=\"name\" :value=\"name\" :label=\"name\" />\n  </emqx-select>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, defineEmits, defineProps, watch, ref, nextTick } from 'vue'\nimport type { Ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { queryGroupList } from '@/api/config'\nimport type { GroupData } from '@/types/config'\n\nconst props = defineProps({\n  modelValue: { type: String, default: '' },\n  driver: { type: String, required: true },\n  placeholder: { type: String, default: '' },\n  size: { type: String, default: '' },\n  disabled: { type: Boolean, default: false },\n  width: { type: String, default: '220px' },\n})\nconst emits = defineEmits(['update:modelValue', 'change'])\n\nconst { t } = useI18n()\n\nconst groupList: Ref<Array<GroupData>> = ref([])\n\nconst group = computed({\n  get: () => props.modelValue,\n  set: (val) => {\n    emits('update:modelValue', val)\n  },\n})\n\nwatch(\n  () => props.driver,\n  (newV) => {\n    nextTick(() => {\n      getList(newV)\n    })\n  },\n  { immediate: true },\n)\n\nconst getList = async (driver: string) => {\n  try {\n    groupList.value = driver ? await queryGroupList(driver as string) : []\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst selectorPlaceholder = computed(() => {\n  return props.placeholder || t('config.groupPlaceholder')\n})\nconst changeGroup = (val: string) => {\n  emits('change', val)\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.plugin_select {\n  width: v-bind(width);\n}\n</style>\n"],"names":[],"mappings":"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AAC;AACD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}]}