{"remainingRequest":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/ulrich/neuron-dashboard/src/views/config/components/dataStatisticsDrawer.vue?vue&type=script&lang=ts&setup=true","dependencies":[{"path":"/home/ulrich/neuron-dashboard/src/views/config/components/dataStatisticsDrawer.vue","mtime":1708521072003},{"path":"/home/ulrich/neuron-dashboard/node_modules/babel-loader/lib/index.js","mtime":1705331057465},{"path":"/home/ulrich/neuron-dashboard/node_modules/ts-loader/index.js","mtime":1705331079456},{"path":"/home/ulrich/neuron-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1705331057500},{"path":"/home/ulrich/neuron-dashboard/node_modules/vue-loader-v16/dist/index.js","mtime":1705331083369}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50IGFzIF9kZWZpbmVDb21wb25lbnQgfSBmcm9tICd2dWUnCmltcG9ydCB7IHVucmVmIGFzIF91bnJlZiwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgaXNSZWYgYXMgX2lzUmVmLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiCgpjb25zdCBfd2l0aFNjb3BlSWQgPSBuID0+IChfcHVzaFNjb3BlSWQoImRhdGEtdi0zOTcyNWE1OCIpLG49bigpLF9wb3BTY29wZUlkKCksbikKY29uc3QgX2hvaXN0ZWRfMSA9IHsgY2xhc3M6ICJ0ZXh0LXJvdyIgfQpjb25zdCBfaG9pc3RlZF8yID0geyBjbGFzczogImxhYmVsIiB9CmNvbnN0IF9ob2lzdGVkXzMgPSB7IGNsYXNzOiAidGV4dCIgfQpjb25zdCBfaG9pc3RlZF80ID0gewogIGtleTogMCwKICBjbGFzczogImVtcHR5LXN0YXRlIgp9CgppbXBvcnQgdHlwZSB7IFByb3BUeXBlIH0gZnJvbSAndnVlJwppbXBvcnQgeyBjb21wdXRlZCB9IGZyb20gJ3Z1ZScKaW1wb3J0IHsgRWxEcmF3ZXIgfSBmcm9tICdlbGVtZW50LXBsdXMnCmltcG9ydCB7IGRhdGFTdGF0aXN0aWNzIH0gZnJvbSAnQC9jb21wb3NhYmxlcy9jb25maWcvdXNlRHJpdmVyJwppbXBvcnQgdHlwZSB7IE5vZGVDYXRvZ2VyeSB9IGZyb20gJ0AvdHlwZXMvZW51bXMnCgoKZXhwb3J0IGRlZmF1bHQgLyojX19QVVJFX18qL19kZWZpbmVDb21wb25lbnQoewogIHByb3BzOiB7CiAgbW9kZWxWYWx1ZTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogIHR5cGU6IHsgdHlwZTogU3RyaW5nIGFzIFByb3BUeXBlPE5vZGVDYXRvZ2VyeVtrZXlvZiBOb2RlQ2F0b2dlcnldPiwgZGVmYXVsdDogJycgfSwKICBub2RlTmFtZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcnIH0sCn0sCiAgZW1pdHM6IFsndXBkYXRlOm1vZGVsVmFsdWUnXSwKICBzZXR1cChfX3Byb3BzLCB7IGVtaXQ6IGVtaXRzIH0pIHsKCmNvbnN0IHByb3BzID0gX19wcm9wcwoKCgpjb25zdCB2aXNpYmxlID0gY29tcHV0ZWQoewogIGdldDogKCkgPT4gcHJvcHMubW9kZWxWYWx1ZSwKICBzZXQ6ICh2YWw6IGJvb2xlYW4pID0+IHsKICAgIGVtaXRzKCd1cGRhdGU6bW9kZWxWYWx1ZScsIHZhbCkKICB9LAp9KQoKY29uc3QgeyBkcmF3ZXJSZWYsIGxvYWRpbmdTdGF0aXN0aWMsIG5vZGVTdGF0aXN0aWNEYXRhLCBnZXROb2RlU3RhdGlzdGljRGF0YSB9ID0gZGF0YVN0YXRpc3RpY3MoKQoKaWYgKHByb3BzLnR5cGUgJiYgcHJvcHMubm9kZU5hbWUpIHsKICBnZXROb2RlU3RhdGlzdGljRGF0YShwcm9wcy50eXBlLCB7IG5vZGU6IHByb3BzLm5vZGVOYW1lIH0pCn0KCnJldHVybiAoX2N0eDogYW55LF9jYWNoZTogYW55KSA9PiB7CiAgcmV0dXJuIChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfdW5yZWYoRWxEcmF3ZXIpLCB7CiAgICBtb2RlbFZhbHVlOiBfdW5yZWYodmlzaWJsZSksCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gKCRldmVudDogYW55KSA9PiAoX2lzUmVmKHZpc2libGUpID8gKHZpc2libGUpLnZhbHVlID0gJGV2ZW50IDogbnVsbCkpLAogICAgdGl0bGU6IF9fcHJvcHMubm9kZU5hbWUsCiAgICBkaXJlY3Rpb246ICJydGwiLAogICAgc2l6ZTogIjM1JSIsCiAgICAiY3VzdG9tLWNsYXNzIjogImRhdGFTdGF0aXN0aWNzRHJhd2VyIgogIH0sIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KCgpID0+IFsKICAgICAgX2NyZWF0ZUVsZW1lbnRWTm9kZSgibWFpbiIsIHsKICAgICAgICByZWY6IChfdmFsdWUsIF9yZWZzKSA9PiB7CiAgICAgICAgICBfcmVmc1snZHJhd2VyUmVmJ10gPSBfdmFsdWUKICAgICAgICAgIF9pc1JlZihkcmF3ZXJSZWYpICYmIChkcmF3ZXJSZWYudmFsdWUgPSBfdmFsdWUpCiAgICAgICAgfSwKICAgICAgICBjbGFzczogImNvbnRlbnQiCiAgICAgIH0sIFsKICAgICAgICAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KF91bnJlZihub2RlU3RhdGlzdGljRGF0YSksIChpdGVtKSA9PiB7CiAgICAgICAgICByZXR1cm4gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygic3BhbiIsIHsKICAgICAgICAgICAga2V5OiBpdGVtWzBdCiAgICAgICAgICB9LCBbCiAgICAgICAgICAgIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFsKICAgICAgICAgICAgICBfY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgX2hvaXN0ZWRfMiwgX3RvRGlzcGxheVN0cmluZyhpdGVtWzBdKSArICI6IiwgMSksCiAgICAgICAgICAgICAgX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIF9ob2lzdGVkXzMsIF90b0Rpc3BsYXlTdHJpbmcoaXRlbVsxXSksIDEpCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSkKICAgICAgICB9KSwgMTI4KSkKICAgICAgXSwgNTEyKSwKICAgICAgKCFfdW5yZWYobm9kZVN0YXRpc3RpY0RhdGEpICYmICFfdW5yZWYobG9hZGluZ1N0YXRpc3RpYykpCiAgICAgICAgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJzcGFuIiwgX2hvaXN0ZWRfNCwgX3RvRGlzcGxheVN0cmluZyhfY3R4LiR0KCdjb21tb24uZW1wdHlEYXRhJykpLCAxKSkKICAgICAgICA6IF9jcmVhdGVDb21tZW50Vk5vZGUoIiIsIHRydWUpCiAgICBdKSwKICAgIF86IDEKICB9LCA4LCBbIm1vZGVsVmFsdWUiLCAidGl0bGUiXSkpCn0KfQoKfSk="},{"version":3,"file":null,"sources":["/home/ulrich/neuron-dashboard/src/views/config/components/dataStatisticsDrawer.vue"],"sourcesContent":["<template>\n  <el-drawer v-model=\"visible\" :title=\"nodeName\" direction=\"rtl\" size=\"35%\" custom-class=\"dataStatisticsDrawer\">\n    <main ref=\"drawerRef\" class=\"content\">\n      <span v-for=\"item in nodeStatisticData\" :key=\"item[0]\">\n        <div class=\"text-row\">\n          <span class=\"label\">{{ item[0] }}:</span>\n          <span class=\"text\"> {{ item[1] }}</span>\n        </div>\n      </span>\n    </main>\n    <span v-if=\"!nodeStatisticData && !loadingStatistic\" class=\"empty-state\">{{ $t('common.emptyData') }}</span>\n  </el-drawer>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { PropType } from 'vue'\nimport { computed, defineProps, defineEmits } from 'vue'\nimport { ElDrawer } from 'element-plus'\nimport { dataStatistics } from '@/composables/config/useDriver'\nimport type { NodeCatogery } from '@/types/enums'\n\nconst props = defineProps({\n  modelValue: { type: Boolean, default: false },\n  type: { type: String as PropType<NodeCatogery[keyof NodeCatogery]>, default: '' },\n  nodeName: { type: String, default: '' },\n})\nconst emits = defineEmits(['update:modelValue'])\n\nconst visible = computed({\n  get: () => props.modelValue,\n  set: (val: boolean) => {\n    emits('update:modelValue', val)\n  },\n})\n\nconst { drawerRef, loadingStatistic, nodeStatisticData, getNodeStatisticData } = dataStatistics()\n\nif (props.type && props.nodeName) {\n  getNodeStatisticData(props.type, { node: props.nodeName })\n}\n</script>\n\n<style lang=\"scss\">\n.dataStatisticsDrawer {\n  .el-drawer__header {\n    margin-bottom: 20px;\n    font-size: 20px;\n    font-weight: 500;\n  }\n  .el-drawer__body {\n    border-top: 1px solid #eee;\n    overflow: auto;\n  }\n}\n</style>\n\n<style lang=\"scss\" scoped>\n@import '@/styles/mixins.scss';\n.content {\n  line-height: 24px;\n  padding: 20px;\n  white-space: pre-wrap;\n  color: #333;\n}\n.empty-state {\n  display: inline-block;\n  width: 100%;\n  font-size: 16px;\n  text-align: center;\n  color: #666;\n}\n\n.text-row {\n  @include display-flex(flex-start, center);\n}\n.label {\n  display: inline-block;\n  color: var(--main-label-color);\n}\n.text {\n  color: var(--card-title-color);\n  padding-left: 4px;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;AAeA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA2B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD;;;;;;;;;;;qBANwB;AAWtB;AAC8C;AAChnjG;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}]}